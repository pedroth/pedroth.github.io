<!-- 
title: Public chat
creationDate: 27/12/2021
lastUpdateDate: 19/04/2025
tags: [
    js,
    ui,
    chat,
    java,
    docker,
    server,
    experiments,
    computer science
]
 -->
_Public Chat_ is a chat web application, that I made, to learn about `http server` features of `java`.

My goals with this project were:

- Learning how to build a `java server` with minimal dependencies.
- Learning about setting up a website from home using some tools:
 - The amazing [duckdns](https://www.duckdns.org/) free dynamic DNS.
 - Router port-forwarding.
 - Setting a [Raspberry Pi](https://www.raspberrypi.com/) server
- Implementing upload from scratch.
- Creating a chat with a public delete button.
- Testing pooling http requests to simulate web-sockets (*conclusion*: just use web-sockets).
- Creating open source project
- Dockerize app


The [server](http://pedroth.duckdns.org/) is <span id="serverStatus" style="background:gray; color:white; border-radius:0.5rem; padding:0 1em">...loading</span>.

<script>
const url = 'https://corsproxy.io/?' + encodeURIComponent('http://pedroth.duckdns.org');
fetch(url)
    .then(data => {
        const statusDiv = document.getElementById("serverStatus");
        if(data.ok) {
            statusDiv.style.background = "green";
            statusDiv.innerText = "on";
        } else {
            statusDiv.style.background = "red";
            statusDiv.innerText = "off";
        }
    })
    .catch(e => {
        const statusDiv = document.getElementById("serverStatus");
        statusDiv.style.background = "red";
        statusDiv.innerText = "OFF";
    })
</script>

![*Public Chat* app](/posts/PublicChat/PublicChat.webp)


## Run with docker

`docker run -it -p 80:8080 --name public-chat pedroth/public-chat`

Then open `localhost`. If you want to change the port just write `docker run -it -p < port >:8080 ...`.

### Running docker in raspberry Pi

Since raspberry Pi, have a `arm` processor I made a different image:

`docker run -it -p 80:8080 --name public-chat pedroth/public-chat:linux-arm-v6`

## Update with AI

I made a great update with the help of AI, mainly the style `css`, the rest is still mainly the old code. Still added a new features:
- Upload media preview
- Youtube preview
- Drag files to input to upload them
- Removed bootstrap dependency

Compare previous version:

 <style>
    .image-row {
      display: flex;
      flex-wrap: wrap;
      gap: 10px; /* ðŸ‘ˆ spacing between images */
    }

    .image-row img {
      flex: 1 1 calc(50% - 10px); /* subtract gap to avoid wrapping */
      max-width: calc(50% - 10px);
      height: auto;
      box-sizing: border-box; /* ensures padding/border don't mess up sizing */
    }
  </style>

<div class="image-row">
  <img src="/posts/PublicChat/PublicChat_old.webp" />
  <img src="/posts/PublicChat/PublicChat.webp" />
</div>

Old and new *PublicChats* respectively. 

## Github

<div style="display: flex;flex-direction: column">
    <a target="_blank" href="https://github.com/pedroth/PublicChat" style="align-self: center">
        <button class="button">
            Source Code
        </button>
    </a>
</div>
